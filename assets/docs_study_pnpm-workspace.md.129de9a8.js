import{_ as s,o as a,c as o,a as n}from"./app.3a9b9990.js";const C=JSON.parse('{"title":"Pnpm Workspace","description":"","frontmatter":{},"headers":[{"level":3,"title":"工作空间协议","slug":"工作空间协议","link":"#工作空间协议","children":[]},{"level":2,"title":"filter 过滤","slug":"filter-过滤","link":"#filter-过滤","children":[]},{"level":2,"title":"publishConfig","slug":"publishconfig","link":"#publishconfig","children":[{"level":3,"title":"publishConfig.directory","slug":"publishconfig-directory","link":"#publishconfig-directory","children":[]}]}],"relativePath":"docs/study/pnpm-workspace.md","lastUpdated":1706771416000}'),p={name:"docs/study/pnpm-workspace.md"},l=n(`<h1 id="pnpm-workspace" tabindex="-1">Pnpm Workspace <a class="header-anchor" href="#pnpm-workspace" aria-hidden="true">#</a></h1><p><code>pnpm</code>跟<code>npm</code>、<code>yarn</code>一样，也内置了对 的支持，使用起来比较简单，在项目根目录中新建<code>pnpm-workspace.yaml</code>文件，并声明对应的工作区就好。</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F07178;">packages</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># 所有在 packages/ 子目录下的 package</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">packages/**</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="工作空间协议" tabindex="-1">工作空间协议 <a class="header-anchor" href="#工作空间协议" aria-hidden="true">#</a></h3><p>默认情况下，如果可用的 packages 与已声明的可用范围相匹配，pnpm 将从工作区链接这些packages。 例如：</p><p>如果 bar 中有 <code>&quot;foo&quot;：&quot;^1.0.0&quot;</code> 的这个依赖项，则 <code>foo@1.0.0</code> 链接到 bar 。</p><p>但是，如果 bar 的依赖项中有<code>&quot;foo&quot;: &quot;2.0.0&quot;</code> ，</p><p>而<code>foo@2.0.0</code> 在工作空间中并不存在，则将从 npm registry 安装<code>foo@2.0.0</code> 。</p><p>这种行为带来了一些不确定性。</p><hr><p>幸运的是，<code>pnpm</code>从版本 3.7 开始支持工作区协议<code>workspace:</code> 。</p><p>当使用此协议时，<code>pnpm</code> 将拒绝解析除本地工作区 package 之外的任何内容。</p><p>因此，如果您设置为 <code>&quot;foo&quot;: &quot;workspace:2.0.0&quot;</code> 时，安装将会失败，</p><p>因为 <code>&quot;foo@2.0.0&quot;</code> 不存在于工作空间中。这个特性在 monorepo 当中特别有用。</p><h2 id="filter-过滤" tabindex="-1">filter 过滤 <a class="header-anchor" href="#filter-过滤" aria-hidden="true">#</a></h2><p>通过该参数，允许我们将命令运用到指定的包上面，类似于<code>jQuery</code>跟<code>Dom</code>的选择器，写法如下</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">comman</span><span style="color:#A6ACCD;">d</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">package_selecto</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>同时它也支持链式调用，可以一次写多个调用，如下所示，</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">comman</span><span style="color:#A6ACCD;">d</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">selector1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">selector2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">filter=!selector3</span></span>
<span class="line"></span></code></pre></div><h2 id="publishconfig" tabindex="-1">publishConfig <a class="header-anchor" href="#publishconfig" aria-hidden="true">#</a></h2><p>在<code>package</code>打包之前，可以覆盖 manifest 中的某些字段。 以下字段可以被覆盖：</p><p><code>bin</code> | <code>main</code> | <code>exports</code> | <code>types 或 typings</code> | <code>module</code> | <code>browser</code> | <code>esnext</code> | <code>es2015</code> | <code>unpkg</code> | <code>umd:main</code> | <code>typesVersions</code></p><p>例如，下面的<code>package.json</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">publishConfig</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lib/index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">typings</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lib/index.d.ts</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>将发布为：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lib/index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">typings</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lib/index.d.ts</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="publishconfig-directory" tabindex="-1">publishConfig.directory <a class="header-anchor" href="#publishconfig-directory" aria-hidden="true">#</a></h3><p>使用字段 <code>publishConfig.directory</code> 来自定义相对当前 <code>package.json</code> 的已发布子目录。</p><p>预期会在指定目录中有当前<code>package</code>的修改后的版本（<strong>通常使用第三方构建工具</strong>）。</p><blockquote><p>在这个例子中 <code>&quot;dist&quot;</code> 文件夹必须包含一个 <code>package.json</code></p></blockquote><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">publishConfig</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">directory</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,31),e=[l];function t(c,r,D,y,F,i){return a(),o("div",null,e)}const u=s(p,[["render",t]]);export{C as __pageData,u as default};
